unit dataBaseController;

interface

uses System.Classes, IniFiles, System.SysUtils, FireDAC.Comp.Client, vcl.Forms, database,
    Dialogs;

type

  TDataBaseController = class
     class function getDataBase : TDataBase;
     class procedure connectionDataBase(var connection : TFDConnection);
  end;

implementation

{ TDataBaseController }

class procedure TDataBaseController.connectionDataBase(var connection: TFDConnection);
var DataBase : TDataBase;
begin
  Try
    DataBase := getDataBase;
    with connection do
    begin
      Params.Clear;
      Params.Add('DriverID=MySQL');
      Params.Add('Server=' + DataBase.server);
      Params.Add('Database=' + DataBase.dataBase);
      Params.Add('User_Name=' + DataBase.userName);
      Params.Add('Password=' + DataBase.password);
      Params.Add('Port=' + DataBase.port);

      Try
        Connected := True; // Tenta conectar
      except
        showmessage('Conexão com o banco de dados não estabelecida. O sistema será encerrado.');
        application.terminate;
      End;
    end;
  Finally
    DataBase.Free;
  End;
end;

class function TDataBaseController.getDataBase : TDataBase;
var Ini: TiniFile;
  fileName : string;
begin
  result := nil;
  fileName := ExtractFileName(Application.ExeName)+'\database.ini';

  if not FileExists(fileName) then
    raise Exception.Create('Arquivo de configuração não encontrado!');

  Ini := TiniFile.Create(fileName);
  with result do
  begin
    TDataBase.Create;
    dataBase := Ini.ReadString('DATABASE', 'DATABASE', '');
    userName := Ini.ReadString('DATABASE', 'USERNAME', '');
    server := Ini.ReadString('DATABASE', 'SERVER', '');
    port := Ini.ReadString('DATABASE', 'PORT', '');
    password := Ini.ReadString('DATABASE', 'PASSWORD', '');
    fileNameLib := Ini.ReadString('DATABASE', 'FILENAMELIB', '');
  end;
  FreeAndNil(Ini);
end;

end.
